name: Continuous Deployment
on:
  schedule:
    - cron: "00 09 * * 1"
jobs:
  pre_release_check:
    name: Pre-release Check
    permissions:
      actions: read
      contents: read
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.has-new-commits }}
    steps:
      - name: Determine if commits have been pushed to master.
        id: check
        uses: adriangl/check-new-commits-action@v1
        with:
          token: ${{secrets.GH_TOKEN}}
          seconds: 604800
          branch: "master"
  build_release:
    name: Build Release
    needs: pre_release_check
    if: needs.pre_release_check.outputs.should_run == 'true'
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Initialize Runtime Code Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Setup Worker
        run: ci/scripts/setup_worker.sh
      - name: Increment Version Number
        run: ci/scripts/new_version.sh auto_increment
      - name: Build Package and Verify
        run: ci/scripts/build.sh
      - name: Perform Static Code Analysis
        run: ci/scripts/codescan.sh
      - name: Perform Runtime Code Analysis
        uses: github/codeql-action/analyze@v2
      - name: Perform Secure Code Analysis (Secrets)
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.ref_name }}
          head: HEAD
      - name: Run Unit Tests
        run: ci/scripts/test_runner.sh
      - name: Upload release to PyPI
        run: sudo python3 -m twine upload --username=__token__ --password=${{secrets.PYPI_TOKEN}} dist/*
      - name: Create GitHub Release
        run: gh release create --latest --generate-notes dist/*
        env:
          GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
      - name: Upload Test Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-report
          path: |
            /home/runner/work/Flask-OpenAPI/Flask-OpenAPI/ci/tests/report.xml
            /home/runner/work/Flask-OpenAPI/Flask-OpenAPI/ci/tests/coverage.xml
            /home/runner/work/Flask-OpenAPI/Flask-OpenAPI/ci/tests/pytest.log
          if-no-files-found: ignore
          retention-days: 1
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Flask-OpenAPI
          path: /home/runner/work/Flask-OpenAPI/dist
          if-no-files-found: ignore
          retention-days: 1
